<p>Details of the APIs, including endpoints, methods, and example requests/responses.</p><p><a href="https://github.com/Diamond-Jack-ML/diamond_jack/tree/main/src/api" data-card-appearance="inline">https://github.com/Diamond-Jack-ML/diamond_jack/tree/main/src/api</a> </p><h3>Diamond Jack API Documentation</h3><h4>Overview</h4><p>The <code>src/api</code> directory contains the backend logic for the Diamond Jack project, written in Flask. This section provides an overview of the main components, their functionalities, and how they interact.</p><h4>Directory Structure</h4><ac:structured-macro ac:name="code" ac:schema-version="1" ac:macro-id="0701acc0-d183-4748-9b6a-38f16882d56d"><ac:plain-text-body><![CDATA[src/api/
├── __init__.py
├── jira_data.txt
├── main.py
├── routes.py
└── utils.py]]></ac:plain-text-body></ac:structured-macro><h4>Files and Their Purpose</h4><ul><li><p><code>__init__.py</code></p><ul><li><p>Initializes the Flask app and configures necessary settings.</p></li><li><p>Sets up blueprints for modular route management.</p></li></ul></li><li><p><code>jira_data.txt</code></p><ul><li><p>Contains mock data for Jira projects, epics, and tasks.</p></li><li><p>Structure: JSON format with projects, epics, and tasks.</p></li></ul></li><li><p><code>main.py</code></p><ul><li><p>The main entry point for running the Flask application.</p></li><li><p>Configures app settings, initializes extensions, and runs the app.</p></li></ul></li><li><p><code>routes.py</code></p><ul><li><p>Defines the API endpoints for the application.</p></li><li><p>Contains routes for handling requests related to projects, epics, and tasks.</p></li><li><p>Example Endpoint:</p><ul><li><p><code>GET /api/projects</code> - Retrieves all projects.</p></li><li><p><code>POST /api/epics</code> - Creates a new epic.</p></li></ul></li></ul></li><li><p><code>utils.py</code></p><ul><li><p>Utility functions used across the application.</p></li><li><p>Contains helper functions for tasks such as data validation and transformation.</p></li></ul></li></ul><h4>Example Endpoint Documentation</h4><p><code>GET /api/projects</code></p><ul><li><p><strong>Description</strong>: Fetches a list of all projects.</p></li><li><p><strong>Response</strong>:</p><ul><li><p>Status: 200 OK</p></li><li><p>Body: JSON array of project objects.</p></li></ul></li></ul><p><code>POST /api/epics</code></p><ul><li><p><strong>Description</strong>: Creates a new epic under a specified project.</p></li><li><p><strong>Request Body</strong>:</p><ul><li><p><code>project_id</code>: ID of the project.</p></li><li><p><code>summary</code>: Summary of the epic.</p></li><li><p><code>status</code>: Status of the epic.</p></li></ul></li><li><p><strong>Response</strong>:</p><ul><li><p>Status: 201 Created</p></li><li><p>Body: JSON object of the created epic.</p></li></ul></li></ul><h4>How to Run the Application</h4><ol start="1"><li><p><strong>Install Dependencies</strong>:</p><ac:structured-macro ac:name="code" ac:schema-version="1" ac:macro-id="fbbeebed-bb82-476d-bd4f-a6cdd4478407"><ac:plain-text-body><![CDATA[pip install -r requirements.txt]]></ac:plain-text-body></ac:structured-macro></li><li><p><strong>Set Up Environment Variables</strong>:</p></li></ol><ul><li><p>Create a <code>.env</code> file with necessary environment variables.</p></li></ul><ol start="3"><li><p><strong>Run the Application</strong>:</p><ac:structured-macro ac:name="code" ac:schema-version="1" ac:macro-id="270766c6-b246-4978-b415-64af5abb711a"><ac:plain-text-body><![CDATA[python src/api/main.py]]></ac:plain-text-body></ac:structured-macro></li></ol><h3>Conclusion</h3><p>This documentation provides an initial overview and should be expanded with more details as the project evolves. Each endpoint should have a detailed description, including request parameters and response examples.</p><p>For more detailed documentation, you can explore the repository: <a href="https://github.com/Diamond-Jack-ML/diamond_jack/tree/main/src/api">Diamond Jack API</a>.</p><p />